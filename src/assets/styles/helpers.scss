@import "./breakpoints";

@each $prop, $abbrev in (font-size: fs) {
    @for $index from 0 to 72 {
        $size: $index * 1;
        $length: #{$size}px;

        .#{$abbrev}-#{$size} {
            #{$prop}: $length !important;
        }
    }
}

@each $prop, $abbrev in (font-weight: fw) {
    @for $index from 1 to 9 {
        $size: $index * 100;
        $length: #{$size};

        .#{$abbrev}-#{$size} {
            #{$prop}: $length !important;
        }
    }
}

// ------------------------------------------------------------------------------------------------------
// @ Line-height helpers
// ------------------------------------------------------------------------------------------------------
@each $prop, $abbrev in (line-height: lh) {
    @for $index from 0 to 72 {
        $size: $index * 1;
        $length: #{$size}px;

        .#{$abbrev}-#{$size} {
            #{$prop}: $length !important;
        }
    }
}

// -----------------------------------------------------------------------------------------------------
// @ Size helpers
// -----------------------------------------------------------------------------------------------------
@each $prop, $abbrev in (height: h, width: w) {

    @for $index from 0 through 360 {
        $size: $index * 2;
        $length: #{$size}px;

        .#{$abbrev}-#{$size} {
            #{$prop}: $length !important;
            min-#{$prop}: $length !important;
            max-#{$prop}: $length !important;
        }
    }

    // With Percentage
    @for $i from 0 through 50 {
        $i-p: 2 * $i;
        $size-p: 2% * $i;

        .#{$abbrev}-#{$i-p}-p {
            #{$prop}: $size-p !important;
        }
    }
}

// -----------------------------------------------------------------------------------------------------
// @ Spacing helpers
// -----------------------------------------------------------------------------------------------------
@each $breakpoint, $materialBreakpoint in $helper-breakpoints {

    @include media-breakpoint($materialBreakpoint) {

        $infix: if($materialBreakpoint == null, "", "-#{$breakpoint}");

        @each $prop, $abbrev in (margin: m, padding: p) {

            @for $index from 0 through 128 {
                $size: $index * 2;
                $length: #{$size}px;

                .#{$abbrev}#{$infix}-#{$size} {
                    #{$prop}: $length !important;
                }
            }

            @for $index from 0 through 128 {
                $size: $index * 2;
                $length: #{$size}px;

                .#{$abbrev}x#{$infix}-#{$size} {
                    #{$prop}-right: $length !important;
                    #{$prop}-left: $length !important;
                }

                .#{$abbrev}y#{$infix}-#{$size} {
                    #{$prop}-top: $length !important;
                    #{$prop}-bottom: $length !important;
                }
            }

            @for $index from 0 through 128 {
                $size: $index * 2;
                $length: #{$size}px;

                .#{$abbrev}t#{$infix}-#{$size} {
                    #{$prop}-top: $length !important;
                }

                .#{$abbrev}r#{$infix}-#{$size} {
                    #{$prop}-right: $length !important;
                }

                .#{$abbrev}b#{$infix}-#{$size} {
                    #{$prop}-bottom: $length !important;
                }

                .#{$abbrev}l#{$infix}-#{$size} {
                    #{$prop}-left: $length !important;
                }
            }

            @if ($abbrev == m) {

                // Some special margin utils for flex alignments
                .m#{$infix}-auto {
                    margin: auto !important;
                }

                .mt#{$infix}-auto {
                    margin-top: auto !important;
                }

                .mr#{$infix}-auto {
                    margin-right: auto !important;
                }

                .mb#{$infix}-auto {
                    margin-bottom: auto !important;
                }

                .ml#{$infix}-auto {
                    margin-left: auto !important;
                }

                .mx#{$infix}-auto {
                    margin-right: auto !important;
                    margin-left: auto !important;
                }

                .my#{$infix}-auto {
                    margin-top: auto !important;
                    margin-bottom: auto !important;
                }
            }
            @if ($abbrev == p) {

                // Some special margin utils for flex alignments
                .p#{$infix}-auto {
                    margin: auto !important;
                }

                .pt#{$infix}-auto {
                    margin-top: auto !important;
                }

                .pr#{$infix}-auto {
                    margin-right: auto !important;
                }

                .pb#{$infix}-auto {
                    margin-bottom: auto !important;
                }

                .pl#{$infix}-auto {
                    margin-left: auto !important;
                }

                .px#{$infix}-auto {
                    margin-right: auto !important;
                    margin-left: auto !important;
                }

                .py#{$infix}-auto {
                    margin-top: auto !important;
                    margin-bottom: auto !important;
                }
            }
        }
    }
}